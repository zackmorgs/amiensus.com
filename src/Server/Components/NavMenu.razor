@using Microsoft.AspNetCore.Components.Routing
@using Microsoft.AspNetCore.Components
@using AntDesign.Icons;
@using Microsoft.AspNetCore.Identity;

@rendermode InteractiveServer

@inject AuthenticationStateProvider AuthenticationStateProvider;
@inject NavigationManager Navigation;
@* @inject IHttpContextAccessor HttpContextAccessor; *@

@code {
    private bool isAuthenticated = false;
    public bool isMenuOpen = false;
    public bool isLoaded = false;

    private string? currentUrl;
    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        isAuthenticated = authState.User.Identity?.IsAuthenticated ?? false;
        currentUrl = Navigation.ToBaseRelativePath(Navigation.Uri);
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await Task.Delay(1000);
            isLoaded = true;
            StateHasChanged();
        }
    }
    public async Task ToggleMenu()
    {
        isMenuOpen = !isMenuOpen;
        await InvokeAsync(StateHasChanged);
    }
}


<nav id="nav_menu" class="fixed top-0  right-0 left-0 @(!isLoaded ? "loading" : "") @(isMenuOpen ? " open" : "")">
    <div id="nav_container">
        <div id="nav_bar">
            <a href="/">
                <h1 id="logo" class="transparent">amiensus.com</h1>
            </a>
            <button class="block md:hidden p-2  rounded focus:outline-none focus:ring-2 focus:ring-gray-400"
                @onclick="@ToggleMenu">
                @if (!isMenuOpen)
                {
                    <svg class="h-6 w-6" fill="none" stroke="currentColor" viewBox="0 0 24 24"
                        xmlns="http://www.w3.org/2000/svg">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16">
                        </path>
                    </svg>
                }
                else
                {
                    <svg class="h-6 w-6" fill="none" stroke="currentColor" viewBox="0 0 24 24"
                        xmlns="http://www.w3.org/2000/svg">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12">
                        </path>
                    </svg>
                }
            </button>
        </div>

        <!-- Conditionally render "hidden" class on the #nav_items container -->
        <div id="nav_items" class="@($"md:flex {(isMenuOpen ? "" : "hidden")} absolute md:static")">
            @* <div id="search_container" class="p-2">
                <div id="nav_search" class="form-group">
                    <span class="icon">
                        <SearchOutlined />
                    </span>
                    <input  type="search" id="search" placeholder="Search NAM Models..."
                        class="rounded block w-full" />
                </div>
            </div> *@
            <ul id="nav_list"
                class="flex flex-col md:flex-row md:flex p-4 space-y-2 md:space-y-0 md:space-x-4 md:bg-transparent">
                <li>
                    <NavLink activeClass="active" @onclick="@ToggleMenu" href="/" class="nav-item"
                        Match="NavLinkMatch.All">
                        Home
                    </NavLink>
                </li>
                <li>
                    <NavLink activeClass="active" @onclick="@ToggleMenu" href="/about" Match="NavLinkMatch.Prefix"
                        class="nav-item">
                        About
                    </NavLink>
                </li>
                <li>
                    <NavLink activeClass="active" @onclick="@ToggleMenu" href="/contact" Match="NavLinkMatch.Prefix"
                        class="nav-item">
                        Contact
                    </NavLink>
                </li>
                <li>
                    <NavLink activeClass="active" @onclick="@ToggleMenu" href="/blog" Match="NavLinkMatch.Prefix"
                        class="nav-item">
                        Blog
                    </NavLink>
                </li>
                <li>
                    <NavLink activeClass="active" @onclick="@ToggleMenu" href="/tour" Match="NavLinkMatch.Prefix"
                        class="nav-item">
                        Tour
                    </NavLink>
                </li>
            </ul>
            <div id="account_container" class="p-4 flex flex-col items-center justify-center">
                @if (isAuthenticated)
                {
                    <!-- Show options for authenticated users -->
                    <div id="account_btns" class="flex flex-row justify-between items-center">
                        <a href="/Account/Manage" class="nav-item" activeClass="active" @onclick="@ToggleMenu">
                            <UserOutlined />
                        </a>
                        <form action="Account/Logout" method="post">
                            <AntiforgeryToken />
                            <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                            <button class="nav-item" type="submit">
                                <LogoutOutlined />
                            </button>
                    </form>
                    </div>
                }
                else
                {
                    <!-- Show options for unauthenticated users -->
                    <div id="account_btns" class="flex flex-row justify-between items-center">
                        <a href="/Account/Login" class="nav-item" activeClass="active" @onclick="@ToggleMenu">Login</a>
                        <a href="/Account/Register" class="nav-item" activeClass="active"
                            @onclick="@ToggleMenu">Register</a>
                    </div>
                }
            </div>
        </div>
    </div>
</nav>